@tuple
class Pattern:
    pattern: str
    flags: int
    _p: cobj

@tuple
class Span:
    start: int
    stop: int

@tuple
class Match:
    spans: Ptr[Span]
    pos: int
    endpos: int
    re: Pattern
    string: str

_ANCHOR_UNANCHORED   = 0
_ANCHOR_ANCHOR_START = 1
_ANCHOR_ANCHOR_BOTH  = 2

@C
@nocapture
def seq_re_fullmatch(pattern: str,
                     string: str) -> bool:
    pass

@C
@nocapture
def seq_re_findall(pattern: str,
                   string: str,
                   count: Ptr[int],
                   capacity: Ptr[int]) -> Ptr[str]:
    pass

def findall(pattern: str, string: str):
    count = 0
    capacity = 0
    result = seq_re_findall(pattern, string, __ptr__(count), __ptr__(capacity))
    return List(Array(result, capacity), count)

def fullmatch(pattern: str, string: str):
    return seq_re_fullmatch(pattern, string)
