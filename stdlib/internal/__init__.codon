# Core library

@__internal__
class __internal__:
    pass

@tuple
@__internal__
class void:
    pass

@tuple
@__internal__
class bool:
    pass

@tuple
@__internal__
class byte:
    pass

@tuple
@__internal__
class int:
    pass

@tuple
@__internal__
class float:
    pass

@__internal__
class NoneType:
    pass

@tuple
@__internal__
class type:
    pass

@tuple
@__internal__
class Ptr[T]:
    pass

@tuple
@__internal__
class Generator[T]:
    pass

@tuple
@__internal__
class Optional:
    T: type = NoneType

@tuple
@__internal__
class Int[N: Static[int]]:
    pass

@tuple
@__internal__
class UInt[N: Static[int]]:
    pass

@__internal__
class pyobj:
    p: Ptr[byte]

@tuple
@__internal__
class str:
    ptr: Ptr[byte]
    len: int

@tuple
@__internal__
class Array:
    len: int
    ptr: Ptr[T]
    T: type

@extend
class type:
    def __new__(obj):
        pass


# dummy
@__internal__
class TypeVar: pass
@__internal__
class Callable: pass
@__internal__
class Function: pass
@__internal__
class ByVal: pass
@__internal__
class ByRef: pass
@__internal__
class Tuple: pass

@tuple
@__internal__
class __array__:
    T: type
    def __new__(sz: Static[int]) -> Array[T]:
        pass


def __ptr__(var):
    pass

def staticlen(obj):
    pass

def compile_error(msg: Static[str]):
    pass

def isinstance(obj, what):
    pass

def hasattr(obj, attr: Static[str], *args):
    pass

def getattr(obj, attr: Static[str]):
    pass

def tuple(iterable):
    pass

def super():
    pass

# def superf():
#     pass


from internal.attributes import *
from internal.types.ptr import *
from internal.types.str import *
from internal.types.int import *
from internal.types.bool import *
from internal.types.array import *
from internal.types.error import *
from internal.types.intn import *
from internal.types.float import *
from internal.types.byte import *
from internal.types.generator import *
from internal.types.optional import *
from internal.types.slice import *
from internal.types.range import *
from internal.types.complex import *
from internal.internal import *

__argv__ = Array[str](0)

from internal.types.collections.list import *
from internal.types.collections.set import *
from internal.types.collections.dict import *

# Extended core library

import internal.c_stubs as _C
from internal.builtin import *
from internal.builtin import _jit_display
from internal.str import *

from internal.sort import sorted

from openmp import Ident as __OMPIdent, for_par
from internal.file import File, gzFile, open, gzopen
from pickle import pickle, unpickle
from internal.dlopen import dlsym as _dlsym
import internal.python
